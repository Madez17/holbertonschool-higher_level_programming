The ``0-add_integer.py`` module
==================

Using ``add_integer``
-------------------

This test text file in for function add_integer. First import
``Factorial`` from ``add_integer`` module:

    >>>add_integer = __import__('0-add_integer').add_integer

Now use it:
    >>> add_integer(2, 3)
    5
    >>> add_integer( , 3)
      File "<stdin>", line 1
        add_integer( , 3)
                     ^
    SyntaxError: invalid syntax
    >>> add_integer(, 3)
      File "<stdin>", line 1
        add_integer(, 3)
                    ^
    SyntaxError: invalid syntax
    >>> add_integer(2, 3)
    5
    >>> add_integer(2, )
    100
    >>> add_integer()
    Traceback (most recent call last):
      File "<stdin>", line 1, in <module>
    TypeError: add_integer() missing 1 required positional argument: 'a'
    >>> add_integer(-2, )
    96
    >>> add_integer(-2, -9)
    -11
    >>> add_integer("mafe", -9)
    Traceback (most recent call last):
      File "<stdin>", line 1, in <module>
      File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 21, in add_integer
        raise TypeError('a must be an integer')
    TypeError: a must be an integer
    >>>

